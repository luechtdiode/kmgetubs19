server {
    listen    *:80;
    listen [::]:80;
    server_name  localhost;
    
    set $cache-config "non-cached";
    if ($uri  ~* \.(jpg|jpeg|png|gif|ico|css|js|mp3|woff|otf|ttf|font|svg)$) {
        set $cache-config "cached-30d";
    }
    if ($uri ~ /\{favicon.ico|favicon.png|robots.txt}$) {
        set $cache-config "cached-1y";
    }

    index                       index.html index.htm;

    error_page 400          /400.htm;
    error_page 401          /401.htm;
    error_page 403          /403.htm;
    error_page 404          /404.htm;
    error_page 409          /409.htm;
    error_page 500          /500.htm;
    error_page 502          /502.htm;
    error_page 503          /503.htm;
    error_page 504          /504.htm;

    location ~ /[0-9][0-9][0-9]\.htm {
        root                /usr/html/error-pages/;
        allow               all;
        internal;
    }

    location / {
        root                /usr/html;

        if ($cache-config = "cached-1d") {
            expires 1d;
            add_header Cache-Control public;
        }
        if ($cache-config = "cached-30d") {
            expires 30d;
            add_header Cache-Control public;
        }
        if ($cache-config = "cached-1y") {
            expires 1y;
            access_log off;
            add_header Cache-Control public;
        }
        if ($cache-config = "non-cached") {
            # Responses contain sensitive data; browsers and proxy servers should
            # not cache any of this.
            add_header Pragma "no-cache";
            add_header Cache-Control "private, max-age=0, no-cache, no-store, must-revalidate";
        }
    }
    # block of rules for static content
    # include static-content-locations.conf;    
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }
    location ~ ~$ {
        access_log off;
        log_not_found off;
        deny all;
    }
    location /RequestDenied {
        return 418;
    }        
}
